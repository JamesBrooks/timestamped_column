{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Records modified times for individual columns","name":"Timestamped column","body":"# timestamped_column\r\n[![Build Status](https://secure.travis-ci.org/JamesBrooks/timestamped_column.png)](http://travis-ci.org/JamesBrooks/timestamped_column>) [![Dependency Status](https://gemnasium.com/JamesBrooks/timestamped_column.png)](https://gemnasium.com/JamesBrooks/timestamped_column)\r\n\r\nRecords the modification time for specific database columns on individual records (using ActiveRecord).\r\n\r\n\r\n## Requirements\r\n\r\nTested and working correctly with:\r\n\r\n* Ruby: 1.8.7, 1.9.2, 1.9.3 and REE.\r\n* Rails: 3.0, 3.1, 3.2 and edge.\r\n\r\nView the [test results for the most recent commit](http://travis-ci.org/JamesBrooks/timestamped_column) using these Ruby and Rails version combinations (thanks to Travis CI).\r\n\r\n\r\n## Installation\r\n\r\nAdd `timestamped_column` to your `Gemfile`:\r\n\r\n```\r\ngem 'timestamped_column'\r\n```\r\n\r\n\r\n## Usage\r\n\r\nUsage is similar to how `created_at`/`updated_at` function in Rails. All you need to start tracking attribute modification times is to add a new column to store the modification value. The column that tracks the modification value should be suffxed with either `_updated_at` or `_updated_on`.\r\n\r\n\r\n## Example\r\n\r\nIf you have a model `User` with an attribute `name` that you want to track the modification time of you just simple add an column named `name_updated_at` (or `name_updated_on`) to the `users` table.\r\n\r\n`timestamped_column` checked for the presence of columns named like this and automatically updates these when the attributes they track are changed.\r\n"}